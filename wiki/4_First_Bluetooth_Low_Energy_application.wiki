#summary Loading and analysis of first Bluetooth Low Energy application on PCA 10001 board
#labels Featured,Phase-QA,Phase-Design

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/work-in-progress_BIG.png

<wiki:toc max_depth="4" />

= Introduction =
To start with Bluetooth Smart, a simple but complete application was provided by Nordic Semiconductor. It can be found on GitHub, at [https://github.com/NordicSemiconductor/nrf51-ble-app-lbs https://github.com/NordicSemiconductor/nrf51-ble-app-lbs]. [http://www.nordicsemi.com/eng/content/download/34055/573345/file/nAN-36_v1.1.pdf Here] is available the related application note (nAN-36).
Minimum requisites to understand the application is to have some knowledge about [https://code.google.com/p/nrf51822-bleeh/wiki/Bluetooth_Smart_Overview Bluetooth Smart technology].

= The Led Button application=
The LED Button application example was created in order to give you an environment where you can learn how to use Bluetooth low energy on the nRF51822 chip. It is a simple BLE application that demonstrates bidirectional communication over BLE. When it is running, you will be able to toggle an LED output on the nRF51822 chip from the Central, and receive a notification when button input on nRF51822 is pressed. 
The application is implemented in one service, with two characteristicsâ€”the LED characteristic, which can be used to control the LED remotely through the write without response operation, and the Button characteristic, which sends a notification when the button is pressed or released.

== Download firmware into evaluation board PCA10001 ==
There are some simple steps to follow. Note that I've SDK v6.0.0 and SoftDevice S110 v7.1.0.
 # *Install* following Nordic Semiconductor software: [nRFgo Studio] and [Master Control Panel]. Download SoftDevice BLE protocol stack solution.
 # *Download* last SoftDevice sw stack on USB dongle (PCA10000): open nRFgo Studio and in device manager menu select nRF51 development dongle and its embedded J-Link programmer. Then select "Program SoftDevice" tab and browse for S110 hex file. Using S110 v7.1.0 its name is _s110_nrf51822_7.1.0_softdevice.hex_. Finally click on _Program_. https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/SD_download_BLE.png
 # *Download* application FW into usb dongle (PCA10000): open Master Control Panel and click on File->Flash programming... then select last FW (_MEFW nRF51822 0.10.0_).Finally click on _Program_. Now usb dongle is ready to work with Master Control Panel. https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/App_download_BLE.png
 # *Download* last SoftDevice sw stack on evaluation board (PCA10001): open nRFgo Studio and in device manager menu select nRF51 evaluation boards and its embedded J-Link programmer. Then select "Program SoftDevice" tab and browse for S110 hex file. Using S110 v7.1.0 its name is _s110_nrf51822_7.1.0_softdevice.hex_. Finally click on _Program_.
 # *Setup* proper Flash and RAM start addresses and size. On KEIL uVision, open _ble_app_lbs.uvproj_ then go to Flash->Configure Flash Tools... and go to target tab. Check if the IROM1 and IRAM1 parameters match with following and, if not, change them. https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/IRAM_IROM_settings_SD.png Then click on _Debug_ tab, and on settings of J-LINK programmer. In new window select _Flash Download_ tab and check if the RAM for Algorithm is properly setted to Start: 0x20000000 and Size: 0x2000, like following image. If mismatch, change it with correct values. https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/jlink_RAM_SD.png 
 # *Download* application FW into usb evaluation board (PCA10001): in KEIL, build the project (press F7) and download it into evaluation board.
Now the application is running on evaluation board. Push reset button to reset the device. You must see the LED 0 on, indicating the device is in advertising mode. 

== Application analysis==
The analysis is done with help of Master Control Panel.
Connect either devices to usb and open Master Control Panel application. Select as master emulator the serial port corresponding to serial number of embedded J-LINK of the USB dongle. In log table you must see a message claims the server has started.
Clicking on Start discovery button the discovered device table will populate with the "LedButtonDemo" device information. This is the advertising data of evaluation board PCA10001.
Now click on _Select device_ then on _Connect_ and on _Discover services_. You'll see the fundamentals primary services, GAP and GATT, together with the main service of the LedButtonDemo application. Grouped under services there are the corresponding characteristics declaration, characteristic definition (values) and some characteristic descriptors.

=== Services ===

==== Characteristics ====

Starting from this example could be developed the final "BLEEH" application to sense bicycle's speed and send speed-data to external devices such as Bluetooth Smart Ready smartphones.
Probably I need to use the Button characteristic and remove LED characteristic besides to implement tips suggested on wiki page [https://code.google.com/p/nrf51822-bleeh/wiki/Bluetooth_Smart_and_Low_Power_considerations Bluetooth_Smart_and_Low_Power_considerations] of this project.