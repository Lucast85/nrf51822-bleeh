#summary Loading and analysis of first Bluetooth Low Energy application on PCA 10001 board
#labels Featured,Phase-QA,Phase-Design

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/work-in-progress_BIG.png

<wiki:toc max_depth="4" />

= Introduction =
https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/Bluetooth_Smart_Logo.svg.png

Bluetooth standard is a standard for personal area network allowing short range and low power. Effective ranges varies from 1 meter to 100 meter.
Bluetooth uses a radio technology called frequency hopping spread spectrum (FHSS) allowing to make a very robust link. It operates in the ISM 2.4 GHz band.

Since 1999 the SIG (Special Interest Group) has released 4 different major specifications:
 * BR (specification 1.1): Basic Rate, 1 Mbit/s;
 * EDR (specification 2.0): Enhanced Data Rate, 2 and 3 Mbit/s;
 * HS (specification 3.0): High Speed (Alternate MAC/PHY);
 * LE (specification 4.0): Low Energy, 1 Mbit/s, ultra low power;
Bluetooth low energy is not backward compatible with the older version thus SIG introduces two new terms for separate them:
 * Bluetooth Smart (4.0): Single Mode, LE only radio;
 * Bluetooth Smart Ready (4.0): Dual mode, BR/EDR and LE dual radio;

The nRF51822 support only Bluetooth low energy mode.

Bluetooth Low Energy is particularly suitable for low energy because it uses small packet to transmit information (only 27 bytes), has short TX and RX windows, there is always a race to idle (turn the radio ON as seldom as possible and turn OFF the radio as soon as possible). A connection is accomplished in only 6 ms with fast tear down (hundred of ms with Bluetooth classic). It also has a low memory footprint (8 kB RAM on nRF51822). Finally the protocol is stateless creating every request as independent transaction.

== BLE profiles ==
Profiles are definitions of possible application and specifies general behaviors that devices can use to communicate. Some examples are:
 * Hid over GATT: human Interface Device

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/pc-mouse_BLE.png

 * Heart Rate: Used in sport and medicine

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/HRMBelt_Smartphone_BLE.png

 * Proximity: proximity monitoring of two device

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/keyfob-tablet_BLE.png

== Bluetooth Low Energy architecture ==

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/BLE_architecture.png

It has tree main part: the controller, the host and the application.
=== The Controller===

Is the physical device that can transmit and receive radio signals and understand how the signals can be interpreted. It is composed by:
 * *Physical Layer (PHY)*, the nRF51 series radio module;
 * *Link Layer (LL)*, the most complex part of BLE. It has 5 main states:Standby, Advertising, Scanning, Initiating, Connection. *-Advertising*: the device is transmitting advertising packets; the only way a device can be discovered in BLE is if it is advertising and to connect to a device it must be discovered first. Advertising mode is also used for broadcasting data. *-Scanning*: the device scans for advertising packets. Are possible _passive scanning_ (only receive adv. data) and _active scanning_ (scanner requests are sent to adv devices to obtain additional scanner response data. *-Initiating* state, the device scans for advertising packets and then sends out a connect request to the advertiser. The device will then move to the connection state; *-Connection* state, has two sub-states: master and slave;

Packet structure is composed by two types of packets: Advertising packets understandable by all devices and Data packets understandable only by 2 devices, master and slave.
BLE utilizes 40 channel separated by 2 MHz (instead of the classic 1 MHz) : 3 adv channels and 37 data channels.
Link layer is also responsible for establishment and management of connections. An example is shown below.

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/adv_scan_BLE.png

The two BLE devices in above image are an advertiser, that is a device with the link layer in the advertising state (it sends out advertising packets) and a scanner, that is a device in scanning state (maybe active or a passive scanner which receive only adv. packets).

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/adv_init_BLE.png

A device in the initiating state that receive advertising packets could send a connection request to advertiser and move into the connection state.

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/slave_master_BLE.png

thus the devices becomes master and slave. 

The advertising data is send over three different channels named advertising channels. They're channel 37, 38 and 39, located at 2402 MHz, 2426 MHz and 2480 MHz to be immune to domestic Wi-Fi interference. Advertising intervals can be set in a range of 20 ms to 10 s. It specifies the interval between consecutive advertising packets. For scanner mode, BLE specifies a scan window, which determines the duration of the scan as well as the scan interval, meaning how often it repeats. Here an example.

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/scanning_BLE.png

Above is shown as example how the advertising and scanning work. The device in advertising mode (in image) has an advertising interval of 20 ms, and it send one advertiser packet on channel 37, 38 and 39 (all advertising channels). The device in scanning mode has a scan interval of 50 ms and a scan window of 25 ms. It start scanning at 0 ms and scan on channel 37 until 25 ms. It receive two packets in this channel. Afterwards it shut-down radio for 25 ms, then the scanner jump to channel 38 and scan there for another 25 ms; the same with channel 39 and so on, restarting with channel 37. 

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/advertising_rxPeriod_BLE.png

As shown in detail in above image each advertiser, after sent an advertising packet, has a receive window (RX period) in which it listen for connection request. If a connection request is received on that channel, it acts as shown below.

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/advertising_ConnDONE_BLE.png

Previous image represent the situation where there is an initiator instead of a scanner and it want to establish a connection. The initiator, after received an advertising packet, send a connection request (CREQ) on the same channel during RX period. If a connection request is received, advertiser stop immediately. this is followed by a mandatory delay of 1.25 ms and a transmit window offset; then the transmit windows is opened and slave turns on its receiver and waits for a packet from the master. If it receives a packet, the slave responds, and a connection is estabilished.

When a connection is established, the initiator device (which will become a master) supplies the advertising device (which will become a slave device) with a set of critical data defining the channel and timing of the master-slave data exchange. In particular, this data specifies two important parameters: connection interval and slave latency. The connection interval determines the time between the start of the data packet exchange sequence called connection events. Latency, on the other hand, is a number of communication intervals that a slave may ignore without losing the connection. It gives the slave an opportunity to optimize and preserve power consumption. Once a connection is established, the slave may request an update of communication parameters to better fit the slave application. This is shown in below image.

https://dl.dropboxusercontent.com/u/43091897/HostedFile/nRF51822_project/Conn_timings_M-S.png

The connection interval can be from 7.5 ms to 4 seconds. Multiple packets can be sent every connection interval (6 maximum).

Each communication event is started by the master transmission and it serves as an anchor point to calculate the time for the next event. During a communication event, the master and slave alternate sending and receiving packets until either side stops sending packets. The current event is considered closed and the data exchange is suspended until the next communication event.

===The Host===
The Host is a software stack: manage how two or more devices communicate each others. It is composed by following blocks:
 * Logical Link Control and Adaptation Layer Protocol (L2CAP), provides data services to upper layer protocols like security manager protocol and attribute protocol. It is responsible for protocol multiplexing and data segmentation into smaller packets for the LL controller, and de-multiplexing and reassembly operation on the other end. The L2CAP is a backend interface for the generic access profile (GAP) that defines the generic procedures related to the discovery of BLE devices and link management aspects of connecting to other LE devices.  The GAP provides an interface for the application to configure and enables different modes of operation, e.g. advertising or scanning, and also to initiate, establish, and manage connection with other devices.
 * Security Manager (SM), is responsible for device pairing and key distribution. The security manager protocol (SMP) is defined as how the deviceâ€™s SM communicates with its counterpart on the other device.  The SM provides additional cryptographic functions that may be used by other components of the stack.
 * Attribute Protocol (ATT), define a set of rules for accessing data on a device. Defines how a client can find and access the attributes on a server. Allows an attribute server to expose a set of attributes and their associated values to an attribute client. These attributes can be discovered, read, and written by peer devices.
 * Generic Attribute Profile (GATT),  describes a service framework using the attribute protocol for discovering services, and for reading and writing characteristic values on a peer device. It interfaces with the application through the applicationâ€™s profiles. The application profile itself defines the collection of attributes and any permission needed for these attributes to be used in the communication.
 * Generic Access Profile (GAP), defines the generic procedures related to the discovery of BLE devices and link management aspects of connecting to other LE devices.  The GAP provides an interface for the application to configure and enables different modes of operation, e.g. advertising or scanning, and also to initiate, establish, and manage connection with other devices.

=Bibliography=
 # [http://www.eetimes.com/document.asp?doc_id=1278927 Bluetooth 4.0: An introduction to Bluetooth Low Energyâ€”Part I], Mikhail Galeev, Z-Focus Consulting.
 # [http://www.eetimes.com/document.asp?doc_id=1278966 Bluetooth 4.0: An introduction to Bluetooth Low Energyâ€”Part II], Mikhail Galeev, Z-Focus Consulting.
 # [https://www.nordicsemi.com/eng/nordic/download_resource/24020/5/78061434 Creating Bluetooth low energy applications using nRF51822 Application Note v1.1],  Nordic Semiconductor